name: Pull request
on: [pull_request]

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn install
      - name: Run eslint on changed files
        uses: tj-actions/eslint-changed-files@v11
        with:
          token: ${{ github.token }}
          config_path: '.eslintrc.js'
          file_extensions: |
            **/*.js            
            **/*.ts
            **/*.vue
            **/*.scss
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn build
  deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
          required_contexts: '[]'
          environment: pull request
          ref: ${{ github.head_ref }}
          auto_merge: false
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Set deployment status to pending
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: pull request
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: in_progress
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Deploy Preview to Netlify
        id: deploy_preview
        uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_DEPLOY_MESSAGE: 'Deploy Preview from GitHub Actions'
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

          build_directory: './dist'
          deploy_alias: deploy-preview-${{ github.event.number }}
          build_command: yarn build
        timeout-minutes: 3

      - name: Set deployment status to success
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: pull request
          environment_url: ${{ steps.deploy_preview.outputs.NETLIFY_PREVIEW_URL }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          description: 'Preview the page: ${{ steps.deploy_preview.outputs.NETLIFY_PREVIEW_URL }}'
          mediaType: '{"previews": ["ant-man"]}'
          auto_inactive: false
          state: success
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Set deployment status to failure
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: pull request
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          auto_inactive: false
          state: failure
        env:
          GITHUB_TOKEN: ${{ github.token }}
